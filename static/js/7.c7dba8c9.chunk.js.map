{"version":3,"sources":["../node_modules/@material-ui/core/esm/NoSsr/NoSsr.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"names":["useEnhancedEffect","window","React","NoSsr","props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","mountedState","setMountedState","SwipeArea","ref","anchor","classes","className","width","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","style","_defineProperty","isHorizontal","withStyles","theme","position","top","left","bottom","zIndex","drawer","anchorLeft","right","anchorRight","anchorTop","anchorBottom","name","nodeThatClaimedTheSwipe","calculateCurrentX","touches","document","body","offsetWidth","pageX","calculateCurrentY","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","enter","duration","enteringScreen","exit","leavingScreen","SwipeableDrawer","inProps","useTheme","getThemeProps","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","current","setPosition","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","transform","drawerStyle","webkitTransform","transition","transitions","create","getTransitionProps","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","_ref","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","areNotAtStart","areNotAtEnd","findNativeHandler","element","rootNode","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","getDomTreeShapes","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","ownerDocument","addEventListener","passive","removeEventListener","handleBackdropRef","instance","ReactDOM","Drawer","pointerEvents"],"mappings":"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","file":"static/js/7.c7dba8c9.chunk.js","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      _props$defer = props.defer,\n      defer = _props$defer === void 0 ? false : _props$defer,\n      _props$fallback = props.fallback,\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\n\n  var _React$useState = React.useState(false),\n      mountedState = _React$useState[0],\n      setMountedState = _React$useState[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.drawer - 1\n    },\n    anchorLeft: {\n      right: 'auto'\n    },\n    anchorRight: {\n      left: 'auto',\n      right: 0\n    },\n    anchorTop: {\n      bottom: 'auto',\n      right: 0\n    },\n    anchorBottom: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  var anchor = props.anchor,\n      classes = props.classes,\n      className = props.className,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    ref: ref,\n    style: _defineProperty({}, isHorizontal(anchor) ? 'width' : 'height', width)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"sourceRoot":""}