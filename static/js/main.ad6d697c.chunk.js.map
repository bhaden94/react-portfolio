{"version":3,"sources":["components/nav/NameTitleHeader.tsx","components/nav/Navigation.tsx","infoObjects/SkillsObj.tsx","components/skills/Skills.tsx","components/contact/Contact.tsx","infoObjects/ContactObj.tsx","components/projects/Projects.tsx","infoObjects/ProjectsObj.tsx","components/section-headers/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","theme/index.tsx"],"names":["NameTitleHeader","isDesktop","classes","makeStyles","theme","createStyles","container","padding","name","fontSize","color","palette","secondary","main","title","useStyles","className","Typography","variant","Drawer","React","lazy","SwipeableDrawer","DrawerItems","DrawerFooter","drawerBreakpoint","root","display","drawer","breakpoints","up","width","flexShrink","appBar","backgroundColor","background","paper","primary","menuButton","marginRight","spacing","drawerPaper","Navigation","useTheme","useState","mobileOpen","setMobileOpen","useMediaQuery","handleDrawerToggle","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Hidden","mdUp","implementation","fallback","anchor","open","onClose","onOpen","ModalProps","keepMounted","toggleDrawer","smDown","to","spy","smooth","offset","duration","Divider","SkillsObject","size","names","docker","Docker","spring","Spring","react","ReactJs","angular","Angular","node","NodeDotJs","Git","github","Github","gitlab","Gitlab","mysql","Mysql","postgresql","Postgresql","mongodb","Mongodb","java","Java","javascript","Javascript","typescript","Typescript","sonarqube","Sonarqube","jira","Jira","grafana","Grafana","heroku","Heroku","bootstrap","Bootstrap","nginx","Nginx","Skills","skills","Contact","contact","linkedin","email","href","target","rel","Projects","projects","id","media","shortDesc","longDesc","liveLink","codeLink","techUsed","ProjectObject","map","project","index","tech","text","marginTop","textTransform","fontWeight","Header","top","height","section","bottom","minHeight","App","CssBaseline","join","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","ThemeDispatchContext","createContext","ThemeProvider","children","themeInitialOptions","paletteType","localStorage","getItem","useReducer","state","action","type","payload","Error","themeOptions","dispatch","memoizedTheme","useMemo","createMuiTheme","teal","amber","grey","blueGrey","default","Provider","value","useChangeTheme","useContext","changeTheme","useCallback","setItem"],"mappings":"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","file":"static/js/main.ad6d697c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\ninterface INameTitleHeader {\n    isDesktop: boolean\n}\n\nexport default function NameTitleHeader({ isDesktop }: INameTitleHeader) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                padding: isDesktop ? '40px' : '0px',\n            },\n            name: {\n                fontSize: isDesktop ? '2rem' : '1.5rem',\n                '&:hover': {\n                    color: theme.palette.secondary.main\n                }\n            },\n            title: {\n                fontSize: '.8rem'\n            }\n        }),\n    );\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Typography\n                className={classes.name}\n                color='primary'\n                variant='h1'\n            >\n                Brady Haden\n            </Typography>\n            <Typography\n                className={classes.title}\n                color='textSecondary'\n                variant='h2'\n            >\n                Full Stack Software Engineer\n            </Typography>\n        </div>\n    );\n}\n","import React, { Suspense } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport NameTitleHeader from './NameTitleHeader';\nimport { Link } from 'react-scroll';\nimport Divider from '@material-ui/core/Divider';\n\nconst Drawer = React.lazy(() => import('@material-ui/core/Drawer'));\nconst SwipeableDrawer = React.lazy(() => import('@material-ui/core/SwipeableDrawer'));\nconst DrawerItems = React.lazy(() => import('./DrawerItems'));\nconst DrawerFooter = React.lazy(() => import('./DrawerFooter'));\n\nconst drawerWidth: number = 240;\nconst drawerBreakpoint: any = 'md'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up(drawerBreakpoint)]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.primary.main,\n      [theme.breakpoints.up(drawerBreakpoint)]: {\n        display: 'none',\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(drawerBreakpoint)]: {\n        display: 'none',\n      },\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n  }),\n);\n\nexport default function Navigation() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState<boolean>(false);\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon fontSize='large' />\n          </IconButton>\n          <NameTitleHeader isDesktop={isDesktop} />\n        </Toolbar>\n      </AppBar>\n\n      <nav className={classes.drawer} aria-label=\"Links to page items\">\n        <Hidden mdUp implementation=\"js\">\n          <Suspense fallback={<div>Loading Navbar...</div>}>\n            <SwipeableDrawer\n              anchor='left'\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              onOpen={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              <DrawerItems toggleDrawer={handleDrawerToggle} />\n              <DrawerFooter />\n            </SwipeableDrawer>\n          </Suspense>\n        </Hidden>\n        <Hidden smDown implementation=\"js\">\n          <Suspense fallback={<div>Loading Navbar...</div>}>\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              <Link\n                to={'top'}\n                spy={true}\n                smooth={true}\n                offset={0}\n                duration={300}\n              >\n                <NameTitleHeader isDesktop={isDesktop} />\n              </Link>\n              <Divider />\n              <DrawerItems toggleDrawer={handleDrawerToggle} />\n              <DrawerFooter />\n            </Drawer>\n          </Suspense>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n","import {\n    Docker,\n    Spring,\n    ReactJs,\n    Angular,\n    NodeDotJs,\n    Git,\n    Github,\n    Gitlab,\n    Mysql,\n    Postgresql,\n    Mongodb,\n    Java,\n    Javascript,\n    Typescript,\n    Sonarqube,\n    Jira,\n    Grafana,\n    Heroku,\n    Bootstrap,\n    Nginx\n} from \"@icons-pack/react-simple-icons\";\n\nexport interface SkillsObj {\n    names: string[];\n    [key: string]: any;\n}\n\nexport function SkillsObject(size?: number, color?: string): SkillsObj {\n    return {\n        names: [\"Docker\", \"Spring\"],\n        docker: <Docker color={color || \"#2496ED\"} size={size || 50} />,\n        spring: <Spring color={color || \"#6DB33F\"} size={size || 50} />,\n        react: <ReactJs color={color || \"#61DBFB\"} size={size || 50} />,\n        angular: <Angular color={color || \"#DD0031\"} size={size || 50} />,\n        node: <NodeDotJs color={color || \"#339933\"} size={size || 50} />,\n        Git: <Git color={color || \"#F05032\"} size={size || 50} />,\n        github: <Github color={color || \"#181717\"} size={size || 50} />,\n        gitlab: <Gitlab color={color || \"#FCA121\"} size={size || 50} />,\n        mysql: <Mysql color={color || \"#4479A1\"} size={size || 50} />,\n        postgresql: <Postgresql color={color || \"#336791\"} size={size || 50} />,\n        mongodb: <Mongodb color={color || \"#47A248\"} size={size || 50} />,\n        java: <Java color={color || \"#007396\"} size={size || 50} />,\n        javascript: <Javascript color={color || \"#F7DF1E\"} size={size || 50} />,\n        typescript: <Typescript color={color || \"#3178C6\"} size={size || 50} />,\n        sonarqube: <Sonarqube color={color || \"#4E9BCD\"} size={size || 50} />,\n        jira: <Jira color={color || \"#0052CC\"} size={size || 50} />,\n        grafana: <Grafana color={color || \"#F46800\"} size={size || 50} />,\n        heroku: <Heroku color={color || \"#430098\"} size={size || 50} />,\n        bootstrap: <Bootstrap color={color || \"#7952B3\"} size={size || 50} />,\n        nginx: <Nginx color={color || \"#269539\"} size={size || 50} />\n        // get icons from here: https://simpleicons.org/\n    };\n}\n","import { SkillsObject, SkillsObj } from '../../infoObjects/SkillsObj'\n\nfunction Skills() {\n\n    const skills: SkillsObj = SkillsObject(100)\n\n    return (\n        <div>\n            <div className='icon-hover'>\n                {skills.docker}\n            </div>\n            <div className='icon-hover'>\n                {skills.spring}\n            </div>\n            <div className='icon-hover'>\n                {skills.react}\n            </div>\n            <div className='icon-hover'>\n                {skills.jira}\n            </div>\n            <div className='icon-hover'>\n                {skills.sonarqube}\n            </div>\n            <div className='icon-hover'>\n                {skills.mysql}\n            </div>\n        </div>\n    );\n}\n\nexport default Skills;\n","import { ContactObj, ContactObject } from '../../infoObjects/ContactObj'\n\nfunction Contact() {\n\n    const contact: ContactObj = ContactObject()\n\n    return (\n        <div>\n            <a href={contact.github} target=\"_blank\" rel=\"noopener noreferrer\">github</a><br />\n            <a href={contact.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">linkedin</a><br />\n            <a href={contact.email} target=\"_blank\" rel=\"noopener noreferrer\">email</a>\n        </div>\n    );\n}\n\nexport default Contact;\n","export interface ContactObj {\n    github: string;\n    linkedin: string;\n    email: string;\n}\n\nexport function ContactObject(): ContactObj {\n    return {\n        github: 'https://github.com/bhaden94',\n        linkedin: 'https://www.linkedin.com/in/brady-haden/',\n        email: 'mailto:brady.s.haden@gmail.com?subject=Greetings From Portfolio',\n    };\n}","import { Icon } from \"@icons-pack/react-simple-icons\";\nimport { ProjectObject, ProjectObj } from '../../infoObjects/ProjectsObj'\n\nfunction Projects() {\n\n    const projects: ProjectObj[] = ProjectObject()\n\n    return (\n        <div>\n            {\n                projects.map((project: ProjectObj, index: number) => {\n                    return (\n                        <div>\n                            <p>{project.media}</p>\n                            <p>{project.title}</p>\n                            <p>{project.shortDesc}</p>\n                            <p>{project.longDesc}</p>\n                            <p>{project.liveLink}</p>\n                            <p>{project.codeLink}</p>\n                            {project.techUsed.map((tech: Icon) => {\n                                return (\n                                    <div className='icon-hover'>\n                                        {tech}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default Projects;\n","import { SkillsObj, SkillsObject } from \"./SkillsObj\";\n\nexport interface ProjectObj {\n    id: number;\n    media: string;\n    title: string;\n    shortDesc: string;\n    longDesc: string;\n    liveLink: string;\n    codeLink: string;\n    techUsed: any[];\n}\n\nexport function ProjectObject(): ProjectObj[] {\n\n    const skills: SkillsObj = SkillsObject()\n\n    // make sure projects are in the order you want them displayed\n    return [\n        {\n            id: 0,\n            media: 'link to picture to be used for card',\n            title: 'title',\n            shortDesc: 'short desc',\n            longDesc: 'long desc',\n            liveLink: 'link to live app',\n            codeLink: 'link to github',\n            techUsed: [skills.docker, skills.spring]\n        },\n        {\n            id: 1,\n            media: 'link to picture to be used for card',\n            title: 'title',\n            shortDesc: 'short desc',\n            longDesc: 'long desc',\n            liveLink: 'link to live app',\n            codeLink: 'link to github',\n            techUsed: [skills.react, skills.github]\n        },\n    ];\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\ninterface IHeaderProps {\n    text: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            backgroundColor: theme.palette.primary.main,\n            width: '100%'\n        },\n        text: {\n            color: '#fff',\n            marginTop: 0,\n            padding: '10px 25px',\n            textTransform: 'uppercase',\n            fontWeight: 'lighter'\n        }\n    }),\n);\n\nfunction Header({ text }: IHeaderProps) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <h2 className={classes.text}>{text}</h2>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Navigation from './components/nav/Navigation';\nimport Skills from './components/skills/Skills'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ThemeProvider from './theme';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Contact from './components/contact/Contact';\nimport Projects from './components/projects/Projects';\nimport Header from './components/section-headers/Header';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    top: {\n      height: '100vh',\n    },\n    section: {\n      width: '100%'\n    },\n    bottom: {\n      minHeight: '100vh',\n    }\n  }),\n);\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <CssBaseline />\n        <Navigation />\n        <div className=\"App-header\">\n          <div id='top' className={[classes.top, classes.section].join(' ')}>top</div>\n\n          <div id=\"About\" className={classes.section}>\n            <Header text='About' />\n          </div>\n\n          <div id=\"Skills\" className={classes.section}>\n            <Header text='Skills' />\n            <Skills />\n          </div>\n\n          <div id=\"Projects\" className={classes.section}>\n            <Header text='projects' />\n            <Projects />\n          </div>\n\n          <div id=\"Experience\" className={classes.section}>\n            <Header text='Experience' />\n          </div>\n\n          <div id=\"Education\" className={classes.section}>\n            <Header text='Education' />\n          </div>\n\n          <div id=\"Contact\" className={[classes.bottom, classes.section].join(' ')}>\n            <Header text='Contact' />\n            <Contact />\n          </div>\n\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  type Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n  };\n  \n  export function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        process.env.PUBLIC_URL,\n        window.location.href\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react';\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n  Theme\n} from '@material-ui/core/styles';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { blueGrey, grey, teal, amber } from '@material-ui/core/colors';\n\ninterface ThemeProviderProps {\n  children: React.ReactNode\n  theme: Theme\n}\n\nconst ThemeDispatchContext = React.createContext<any>(null);\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = ({ children, theme }) => {\n\n  const themeInitialOptions = {\n    paletteType: localStorage.getItem('theme') === 'dark'? 'dark' : 'light'\n  }\n\n  const [themeOptions, dispatch] = React.useReducer((state: any, action: any)=> {\n    switch (action.type) {\n      case 'changeTheme':\n        return {\n          ...state,\n          paletteType: action.payload\n        }\n      default:\n        throw new Error();\n    }\n  }, themeInitialOptions);\n\n  const memoizedTheme = React.useMemo(()=>{\n    return createMuiTheme({\n      ...theme,\n      palette: {\n        type: themeOptions.paletteType,\n        primary: {\n          main: themeOptions.paletteType === 'light' ? teal[900] : teal[500]\n        },\n        secondary: {\n            main: themeOptions.paletteType === 'light' ? amber[600] : amber[800]\n        },\n        background: {\n            paper: themeOptions.paletteType === 'light' ? grey[50] : blueGrey[900],\n            default: themeOptions.paletteType === 'light' ? grey[200] : blueGrey[800],\n        }\n      }\n    })\n  }, [theme,themeOptions.paletteType]);\n\n  return (\n    <MuiThemeProvider theme={memoizedTheme}>\n      <ThemeDispatchContext.Provider value={dispatch}>\n        {children}\n      </ThemeDispatchContext.Provider>\n    </MuiThemeProvider>\n  )\n}\n\nexport default ThemeProvider\n\nexport const useChangeTheme = () => {\n  const dispatch = React.useContext(ThemeDispatchContext);\n  const theme = useTheme();\n  const changeTheme = React.useCallback(()=>\n    dispatch({\n      type: 'changeTheme',\n      payload: theme.palette.type === 'light' ? 'dark' : 'light'\n    }),\n  [theme.palette.type, dispatch]);\n  localStorage.setItem('theme', theme.palette.type)\n  return changeTheme;\n}"],"sourceRoot":""}