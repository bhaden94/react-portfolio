{"version":3,"sources":["../node_modules/@material-ui/core/esm/Drawer/Drawer.js","../node_modules/@material-ui/core/esm/NoSsr/NoSsr.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"names":["oppositeDirection","left","right","top","bottom","isHorizontal","anchor","indexOf","getAnchor","theme","direction","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Drawer","React","props","ref","_props$anchor","anchorProp","BackdropProps","children","classes","className","_props$elevation","elevation","_props$ModalProps","ModalProps","BackdropPropsProp","_objectWithoutProperties","onClose","_props$open","open","_props$PaperProps","PaperProps","SlideProps","_props$TransitionComp","TransitionComponent","Slide","_props$transitionDura","transitionDuration","_props$variant","variant","other","useTheme","mounted","current","drawer","Paper","_extends","square","clsx","paper","concat","capitalize","root","docked","slidingDrawer","in","timeout","appear","Modal","BackdropComponent","Backdrop","modal","withStyles","flex","overflowY","display","flexDirection","height","zIndex","WebkitOverflowScrolling","position","outline","paperAnchorLeft","paperAnchorRight","paperAnchorTop","maxHeight","paperAnchorBottom","paperAnchorDockedLeft","borderRight","palette","divider","paperAnchorDockedTop","borderBottom","paperAnchorDockedRight","borderLeft","paperAnchorDockedBottom","borderTop","name","flip","useEnhancedEffect","window","NoSsr","_props$defer","defer","_props$fallback","fallback","_React$useState","mountedState","setMountedState","SwipeArea","width","style","_defineProperty","anchorLeft","anchorRight","anchorTop","anchorBottom","nodeThatClaimedTheSwipe","calculateCurrentX","touches","document","body","offsetWidth","pageX","calculateCurrentY","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","SwipeableDrawer","inProps","getThemeProps","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","ModalPropsProp","onOpen","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","transform","drawerStyle","webkitTransform","transition","transitions","create","getTransitionProps","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","_ref","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","areNotAtStart","areNotAtEnd","findNativeHandler","element","rootNode","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","getDomTreeShapes","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","ownerDocument","addEventListener","passive","removeEventListener","handleBackdropRef","instance","ReactDOM","pointerEvents"],"mappings":"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","file":"static/js/6.4a741da1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n    docked: {\n      flex: '0 0 auto'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      flex: '1 0 auto',\n      zIndex: theme.zIndex.drawer,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      // temporary style\n      position: 'fixed',\n      top: 0,\n      // We disable the focus ring for mouse, touch and keyboard users.\n      // At some point, it would be better to keep it for keyboard users.\n      // :focus-ring CSS pseudo-class will help.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n    paperAnchorLeft: {\n      left: 0,\n      right: 'auto'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n    paperAnchorRight: {\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n    paperAnchorTop: {\n      top: 0,\n      left: 0,\n      bottom: 'auto',\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n    paperAnchorBottom: {\n      top: 'auto',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedLeft: {\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedTop: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedRight: {\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedBottom: {\n      borderTop: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n  };\n};\nvar oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nvar Drawer = /*#__PURE__*/React.forwardRef(function Drawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 16 : _props$elevation,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropPropsProp = _props$ModalProps.BackdropProps,\n      ModalProps = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SlideProps = props.SlideProps,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Slide : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  var mounted = React.useRef(false);\n  React.useEffect(function () {\n    mounted.current = true;\n  }, []);\n  var anchor = getAnchor(theme, anchorProp);\n  var drawer = /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperAnchor\".concat(capitalize(anchor))], PaperProps.className, variant !== 'temporary' && classes[\"paperAnchorDocked\".concat(capitalize(anchor))])\n  }), children);\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), drawer);\n  }\n\n  var slidingDrawer = /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchor],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps), drawer);\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), slidingDrawer);\n  } // variant === temporary\n\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration: transitionDuration\n    }),\n    BackdropComponent: Backdrop,\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    onClose: onClose,\n    ref: ref\n  }, other, ModalProps), slidingDrawer);\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false\n})(Drawer);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      _props$defer = props.defer,\n      defer = _props$defer === void 0 ? false : _props$defer,\n      _props$fallback = props.fallback,\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\n\n  var _React$useState = React.useState(false),\n      mountedState = _React$useState[0],\n      setMountedState = _React$useState[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.drawer - 1\n    },\n    anchorLeft: {\n      right: 'auto'\n    },\n    anchorRight: {\n      left: 'auto',\n      right: 0\n    },\n    anchorTop: {\n      bottom: 'auto',\n      right: 0\n    },\n    anchorBottom: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  var anchor = props.anchor,\n      classes = props.classes,\n      className = props.className,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    ref: ref,\n    style: _defineProperty({}, isHorizontal(anchor) ? 'width' : 'height', width)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"sourceRoot":""}