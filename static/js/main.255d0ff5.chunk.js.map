{"version":3,"sources":["infoObjects/NavObj.tsx","components/nav/DrawerItems.tsx","components/nav/NameTitleHeader.tsx","theme/index.tsx","components/dark-mode/ThemeSwitcher.tsx","components/nav/DrawerFooter.tsx","components/nav/Navigation.tsx","infoObjects/SkillsObj.tsx","components/skills/Skills.tsx","components/contact/Contact.tsx","infoObjects/ContactObj.tsx","components/projects/Projects.tsx","infoObjects/ProjectsObj.tsx","components/section-headers/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","icon","color","palette","primary","main","NavObjects","classes","id","text","className","navItem","borderBottom","position","left","content","height","background","secondary","transition","width","bottom","active","DrawerItems","toggleDrawer","useTheme","isDesktop","useMediaQuery","breakpoints","up","List","disablePadding","map","listItem","index","activeClass","to","spy","smooth","offset","duration","ListItem","button","onClick","ListItemIcon","ListItemText","disableTypography","Typography","NameTitleHeader","container","padding","name","fontSize","title","variant","ThemeDispatchContext","React","createContext","ThemeProvider","children","themeInitialOptions","paletteType","localStorage","getItem","useReducer","state","action","type","payload","Error","themeOptions","dispatch","memoizedTheme","useMemo","createMuiTheme","teal","amber","paper","grey","blueGrey","default","Provider","value","cursor","ThemeSwitcher","changeTheme","useContext","useCallback","setItem","useChangeTheme","footer","themeLabel","textAlign","DrawerFooter","Grid","direction","justify","alignItems","Link","href","target","rel","drawerBreakpoint","root","display","drawer","flexShrink","appBar","backgroundColor","menuButton","marginRight","spacing","drawerPaper","Navigation","useState","mobileOpen","setMobileOpen","handleDrawerToggle","AppBar","Toolbar","IconButton","aria-label","edge","Hidden","mdUp","implementation","SwipeableDrawer","anchor","open","onClose","onOpen","ModalProps","keepMounted","smDown","Drawer","Divider","SkillsObject","size","names","docker","Docker","spring","Spring","react","ReactJs","angular","Angular","node","NodeDotJs","Git","github","Github","gitlab","Gitlab","mysql","Mysql","postgresql","Postgresql","mongodb","Mongodb","java","Java","javascript","Javascript","typescript","Typescript","sonarqube","Sonarqube","jira","Jira","grafana","Grafana","heroku","Heroku","bootstrap","Bootstrap","nginx","Nginx","Skills","skills","Contact","contact","linkedin","email","Projects","projects","media","shortDesc","longDesc","liveLink","codeLink","techUsed","ProjectObject","project","tech","marginTop","textTransform","fontWeight","Header","section","minHeight","App","CssBaseline","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.255d0ff5.chunk.js","sourcesContent":["import FaceIcon from '@material-ui/icons/Face';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport WorkIcon from '@material-ui/icons/Work';\nimport SchoolIcon from '@material-ui/icons/School';\nimport MailIcon from '@material-ui/icons/Mail';\n// import DescriptionIcon from '@material-ui/icons/Description';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        icon: {\n            color: theme.palette.primary.main\n        }\n    }),\n);\n\nexport interface NavObj {\n    id: number;\n    text: string;\n    icon: any;\n}\n\nexport function NavObjects(): NavObj[] {\n    const classes = useStyles();\n\n    return (\n        [\n            {\n                id: 0,\n                text: 'About',\n                icon: <FaceIcon className={classes.icon} />\n            },\n            {\n                id: 1,\n                text: 'Skills',\n                icon: <BarChartIcon className={classes.icon} />\n            },\n            {\n                id: 2,\n                text: 'Projects',\n                icon: <DashboardIcon className={classes.icon} />\n            },\n            {\n                id: 3,\n                text: 'Experience',\n                icon: <WorkIcon className={classes.icon} />\n            },\n            {\n                id: 4,\n                text: 'Education',\n                icon: <SchoolIcon className={classes.icon} />\n            },\n            {\n                id: 5,\n                text: 'Contact',\n                icon: <MailIcon className={classes.icon} />\n            },\n            // {\n            //     id: 6,\n            //     text: 'Resume',\n            //     icon: <DescriptionIcon className={classes.icon} />\n            // },\n        ]\n    )\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, Theme, createStyles, useTheme } from '@material-ui/core/styles';\nimport { NavObjects, NavObj } from '../../infoObjects/NavObj'\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-scroll';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ninterface IDrawerItems {\n    toggleDrawer(): void\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        navItem: {\n            borderBottom: '2px solid transparent !important',\n            '&::after': {\n                position: 'absolute',\n                left: '50%',\n                content: \"''\",\n                height: '3px',\n                background: theme.palette.secondary.main,\n                transition: 'all 0.1s linear',\n                width: 0,\n                bottom: '-3px'\n            },\n            '&:hover p': {\n                color: theme.palette.secondary.main\n            }\n        },\n        active: {\n            '& $navItem': {\n                '&::after': {\n                    width: '95%',\n                    left: '2.5%'\n                }\n            },\n            '& p': {\n                color: theme.palette.text.primary\n            }\n        },\n    }),\n);\n\nfunction DrawerItems({ toggleDrawer }: IDrawerItems) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n    return (\n        <List disablePadding>\n            {NavObjects().map((listItem: NavObj, index: number) => (\n                <Link\n                    activeClass={classes.active}\n                    to={listItem.text}\n                    spy={true}\n                    smooth={true}\n                    offset={isDesktop ? 0 : -60}\n                    duration={300}\n                    key={listItem.id}\n                >\n                    <ListItem button className={classes.navItem} onClick={toggleDrawer} >\n                        <ListItemIcon>{listItem.icon}</ListItemIcon>\n                        <ListItemText\n                            disableTypography\n                            primary={\n                                <Typography color='textSecondary'>{listItem.text}</Typography>\n                            }\n                        />\n                    </ListItem>\n                </Link>\n            ))}\n        </List>\n    );\n}\n\nexport default DrawerItems;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\ninterface INameTitleHeader {\n    isDesktop: boolean\n}\n\nexport default function NameTitleHeader({ isDesktop }: INameTitleHeader) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                padding: isDesktop ? '40px' : '0px',\n            },\n            name: {\n                fontSize: isDesktop ? '2rem' : '1.5rem',\n                '&:hover': {\n                    color: theme.palette.secondary.main\n                }\n            },\n            title: {\n                fontSize: '.8rem'\n            }\n        }),\n    );\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Typography\n                className={classes.name}\n                color='primary'\n                variant='h1'\n            >\n                Brady Haden\n            </Typography>\n            <Typography\n                className={classes.title}\n                color='textSecondary'\n                variant='h2'\n            >\n                Full Stack Software Engineer\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n  Theme\n} from '@material-ui/core/styles';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { blueGrey, grey, teal, amber } from '@material-ui/core/colors';\n\ninterface ThemeProviderProps {\n  children: React.ReactNode\n  theme: Theme\n}\n\nconst ThemeDispatchContext = React.createContext<any>(null);\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = ({ children, theme }) => {\n\n  const themeInitialOptions = {\n    paletteType: localStorage.getItem('theme') === 'dark'? 'dark' : 'light'\n  }\n\n  const [themeOptions, dispatch] = React.useReducer((state: any, action: any)=> {\n    switch (action.type) {\n      case 'changeTheme':\n        return {\n          ...state,\n          paletteType: action.payload\n        }\n      default:\n        throw new Error();\n    }\n  }, themeInitialOptions);\n\n  const memoizedTheme = React.useMemo(()=>{\n    return createMuiTheme({\n      ...theme,\n      palette: {\n        type: themeOptions.paletteType,\n        primary: {\n          main: themeOptions.paletteType === 'light' ? teal[900] : teal[500]\n        },\n        secondary: {\n            main: themeOptions.paletteType === 'light' ? amber[600] : amber[800]\n        },\n        background: {\n            paper: themeOptions.paletteType === 'light' ? grey[50] : blueGrey[900],\n            default: themeOptions.paletteType === 'light' ? grey[200] : blueGrey[800],\n        }\n      }\n    })\n  }, [theme,themeOptions.paletteType]);\n\n  return (\n    <MuiThemeProvider theme={memoizedTheme}>\n      <ThemeDispatchContext.Provider value={dispatch}>\n        {children}\n      </ThemeDispatchContext.Provider>\n    </MuiThemeProvider>\n  )\n}\n\nexport default ThemeProvider\n\nexport const useChangeTheme = () => {\n  const dispatch = React.useContext(ThemeDispatchContext);\n  const theme = useTheme();\n  const changeTheme = React.useCallback(()=>\n    dispatch({\n      type: 'changeTheme',\n      payload: theme.palette.type === 'light' ? 'dark' : 'light'\n    }),\n  [theme.palette.type, dispatch]);\n  localStorage.setItem('theme', theme.palette.type)\n  return changeTheme;\n}","import { makeStyles, Theme, createStyles, useTheme } from '@material-ui/core/styles';\nimport { useChangeTheme } from '../../theme';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: '5px 0 15px 0'\n        },\n        icon: {\n            color: theme.palette.secondary.main,\n            '&:hover': {\n                color: theme.palette.primary.main,\n                cursor: 'pointer'\n            }\n        }\n    }),\n);\n\nexport default function ThemeSwitcher() {\n\n    const changeTheme = useChangeTheme();\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            {theme.palette.type === 'light' ?\n                <Brightness7Icon onClick={changeTheme} fontSize='large' className={classes.icon} /> :\n                <Brightness4Icon onClick={changeTheme} fontSize='large' className={classes.icon} />\n            }\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles, useTheme } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport ThemeSwitcher from '../dark-mode/ThemeSwitcher';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        footer: {\n            position: \"fixed\",\n            bottom: 0,\n            padding: 15,\n            width: 240 // this is the fixed width of our drawer\n        },\n        themeLabel: {\n            textAlign: 'center'\n        },\n        icon: {\n            color: theme.palette.primary.main,\n            '&:hover': {\n                color: theme.palette.secondary.main,\n                cursor: 'pointer'\n            }\n        }\n    }),\n);\n\nfunction DrawerFooter() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.footer}>\n            <Typography className={classes.themeLabel} color='textSecondary'>\n                {theme.palette.type === 'light' ? \"Give your eyes a break!\" : \"Isn't that better?\"}\n            </Typography>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"flex-start\"\n            >\n                <ThemeSwitcher />\n            </Grid>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"flex-start\"\n            >\n                <Link href='https://github.com/bhaden94' target=\"_blank\" rel=\"noreferrer\">\n                    <GitHubIcon fontSize='large' className={classes.icon} />\n                </Link>\n                <Link href='https://www.linkedin.com/in/brady-haden/' target=\"_blank\" rel=\"noreferrer\">\n                    <LinkedInIcon fontSize='large' className={classes.icon} />\n                </Link>\n                <Link href='mailto:brady.s.haden@gmail.com?subject=Greetings From Portfolio'>\n                    <AlternateEmailIcon fontSize='large' className={classes.icon} />\n                </Link>\n            </Grid>\n        </div >\n    );\n}\n\nexport default DrawerFooter;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport DrawerItems from './DrawerItems'\nimport NameTitleHeader from './NameTitleHeader';\nimport DrawerFooter from './DrawerFooter';\nimport { Link } from 'react-scroll';\nimport Divider from '@material-ui/core/Divider';\n\nconst drawerWidth: number = 240;\nconst drawerBreakpoint: any = 'md'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up(drawerBreakpoint)]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.primary.main,\n      [theme.breakpoints.up(drawerBreakpoint)]: {\n        display: 'none',\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(drawerBreakpoint)]: {\n        display: 'none',\n      },\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n  }),\n);\n\nexport default function Navigation() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState<boolean>(false);\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon fontSize='large' />\n          </IconButton>\n          <NameTitleHeader isDesktop={isDesktop} />\n        </Toolbar>\n      </AppBar>\n\n      <nav className={classes.drawer} aria-label=\"Links to page items\">\n        <Hidden mdUp implementation=\"js\">\n          <SwipeableDrawer\n            anchor='left'\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            onOpen={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <DrawerItems toggleDrawer={handleDrawerToggle} />\n            <DrawerFooter />\n          </SwipeableDrawer>\n        </Hidden>\n        <Hidden smDown implementation=\"js\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <Link\n              to={'top'}\n              spy={true}\n              smooth={true}\n              offset={0}\n              duration={300}\n            >\n              <NameTitleHeader isDesktop={isDesktop} />\n            </Link>\n            <Divider />\n            <DrawerItems toggleDrawer={handleDrawerToggle} />\n            <DrawerFooter />\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n","import {\n    Docker,\n    Spring,\n    ReactJs,\n    Angular,\n    NodeDotJs,\n    Git,\n    Github,\n    Gitlab,\n    Mysql,\n    Postgresql,\n    Mongodb,\n    Java,\n    Javascript,\n    Typescript,\n    Sonarqube,\n    Jira,\n    Grafana,\n    Heroku,\n    Bootstrap,\n    Nginx\n} from \"@icons-pack/react-simple-icons\";\n\nexport interface SkillsObj {\n    names: string[];\n    [key: string]: any;\n}\n\nexport function SkillsObject(size?: number, color?: string): SkillsObj {\n    return {\n        names: [\"Docker\", \"Spring\"],\n        docker: <Docker color={color || \"#2496ED\"} size={size || 50} />,\n        spring: <Spring color={color || \"#6DB33F\"} size={size || 50} />,\n        react: <ReactJs color={color || \"#61DBFB\"} size={size || 50} />,\n        angular: <Angular color={color || \"#DD0031\"} size={size || 50} />,\n        node: <NodeDotJs color={color || \"#339933\"} size={size || 50} />,\n        Git: <Git color={color || \"#F05032\"} size={size || 50} />,\n        github: <Github color={color || \"#181717\"} size={size || 50} />,\n        gitlab: <Gitlab color={color || \"#FCA121\"} size={size || 50} />,\n        mysql: <Mysql color={color || \"#4479A1\"} size={size || 50} />,\n        postgresql: <Postgresql color={color || \"#336791\"} size={size || 50} />,\n        mongodb: <Mongodb color={color || \"#47A248\"} size={size || 50} />,\n        java: <Java color={color || \"#007396\"} size={size || 50} />,\n        javascript: <Javascript color={color || \"#F7DF1E\"} size={size || 50} />,\n        typescript: <Typescript color={color || \"#3178C6\"} size={size || 50} />,\n        sonarqube: <Sonarqube color={color || \"#4E9BCD\"} size={size || 50} />,\n        jira: <Jira color={color || \"#0052CC\"} size={size || 50} />,\n        grafana: <Grafana color={color || \"#F46800\"} size={size || 50} />,\n        heroku: <Heroku color={color || \"#430098\"} size={size || 50} />,\n        bootstrap: <Bootstrap color={color || \"#7952B3\"} size={size || 50} />,\n        nginx: <Nginx color={color || \"#269539\"} size={size || 50} />\n        // get icons from here: https://simpleicons.org/\n    };\n}\n","import { SkillsObject, SkillsObj } from '../../infoObjects/SkillsObj'\n\nfunction Skills() {\n\n    const skills: SkillsObj = SkillsObject(100)\n\n    return (\n        <div>\n            <div className='icon-hover'>\n                {skills.docker}\n            </div>\n            <div className='icon-hover'>\n                {skills.spring}\n            </div>\n            <div className='icon-hover'>\n                {skills.react}\n            </div>\n            <div className='icon-hover'>\n                {skills.jira}\n            </div>\n            <div className='icon-hover'>\n                {skills.sonarqube}\n            </div>\n            <div className='icon-hover'>\n                {skills.mysql}\n            </div>\n        </div>\n    );\n}\n\nexport default Skills;\n","import { ContactObj, ContactObject } from '../../infoObjects/ContactObj'\n\nfunction Contact() {\n\n    const contact: ContactObj = ContactObject()\n\n    return (\n        <div>\n            <a href={contact.github} target=\"_blank\" rel=\"noopener noreferrer\">github</a><br />\n            <a href={contact.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">linkedin</a><br />\n            <a href={contact.email} target=\"_blank\" rel=\"noopener noreferrer\">email</a>\n        </div>\n    );\n}\n\nexport default Contact;\n","export interface ContactObj {\n    github: string;\n    linkedin: string;\n    email: string;\n}\n\nexport function ContactObject(): ContactObj {\n    return {\n        github: 'https://github.com/bhaden94',\n        linkedin: 'https://www.linkedin.com/in/brady-haden/',\n        email: 'mailto:brady.s.haden@gmail.com?subject=Greetings From Portfolio',\n    };\n}","import { Icon } from \"@icons-pack/react-simple-icons\";\nimport { ProjectObject, ProjectObj } from '../../infoObjects/ProjectsObj'\n\nfunction Projects() {\n\n    const projects: ProjectObj[] = ProjectObject()\n\n    return (\n        <div>\n            {\n                projects.map((project: ProjectObj, index: number) => {\n                    return (\n                        <div>\n                            <p>{project.media}</p>\n                            <p>{project.title}</p>\n                            <p>{project.shortDesc}</p>\n                            <p>{project.longDesc}</p>\n                            <p>{project.liveLink}</p>\n                            <p>{project.codeLink}</p>\n                            {project.techUsed.map((tech: Icon) => {\n                                return (\n                                    <div className='icon-hover'>\n                                        {tech}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default Projects;\n","import { SkillsObj, SkillsObject } from \"./SkillsObj\";\n\nexport interface ProjectObj {\n    id: number;\n    media: string;\n    title: string;\n    shortDesc: string;\n    longDesc: string;\n    liveLink: string;\n    codeLink: string;\n    techUsed: any[];\n}\n\nexport function ProjectObject(): ProjectObj[] {\n\n    const skills: SkillsObj = SkillsObject()\n\n    // make sure projects are in the order you want them displayed\n    return [\n        {\n            id: 0,\n            media: 'link to picture to be used for card',\n            title: 'title',\n            shortDesc: 'short desc',\n            longDesc: 'long desc',\n            liveLink: 'link to live app',\n            codeLink: 'link to github',\n            techUsed: [skills.docker, skills.spring]\n        },\n        {\n            id: 1,\n            media: 'link to picture to be used for card',\n            title: 'title',\n            shortDesc: 'short desc',\n            longDesc: 'long desc',\n            liveLink: 'link to live app',\n            codeLink: 'link to github',\n            techUsed: [skills.react, skills.github]\n        },\n    ];\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\ninterface IHeaderProps {\n    text: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            backgroundColor: theme.palette.primary.main,\n            width: '100%'\n        },\n        text: {\n            color: '#fff',\n            marginTop: 0,\n            padding: '10px 25px',\n            textTransform: 'uppercase',\n            fontWeight: 'lighter'\n        }\n    }),\n);\n\nfunction Header({ text }: IHeaderProps) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <h2 className={classes.text}>{text}</h2>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Navigation from './components/nav/Navigation';\nimport Skills from './components/skills/Skills'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ThemeProvider from './theme';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Contact from './components/contact/Contact';\nimport Projects from './components/projects/Projects';\nimport Header from './components/section-headers/Header';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    section: {\n      minHeight: '100vh',\n      width: '100%'\n    }\n  }),\n);\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <CssBaseline />\n        <Navigation />\n        <div className=\"App-header\">\n          <div id='top' style={{ height: '100vh' }}></div>\n\n          <div id=\"About\" className={classes.section}>\n            <Header text='About' />\n          </div>\n\n          <div id=\"Skills\" className={classes.section}>\n            <Header text='Skills' />\n            <Skills />\n          </div>\n\n          <div id=\"Projects\" className={classes.section}>\n            <Header text='projects' />\n            <Projects />\n          </div>\n\n          <div id=\"Experience\" className={classes.section}>\n            <Header text='Experience' />\n          </div>\n\n          <div id=\"Education\" className={classes.section}>\n            <Header text='Education' />\n          </div>\n\n          <div id=\"Contact\" className={classes.section}>\n            <Header text='Contact' />\n            <Contact />\n          </div>\n\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  type Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n  };\n  \n  export function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        process.env.PUBLIC_URL,\n        window.location.href\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}